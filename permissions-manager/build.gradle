apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'

group = 'net.ralphpina.permissionsmanager'
version = '2.0.0'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "2.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    // gets rid of this message:
    // java.lang.RuntimeException: Method putExtra in android.content.Intent not mocked. See http://g.co/androidstudio/not-mocked for details.
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha02'

    // TESTING
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.3.21'
    testImplementation "com.google.truth:truth:0.43"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'
}

task androidJavadocs(type: Javadoc) {
    options {
        linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"

    }
    failOnError false
    source = "src/main/java"
    classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from "src/main/java"
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

//android.libraryVariants.all { variant ->
//    variant.outputs.each { output ->
//        def outputFile = output.outputFile
//        if (outputFile != null && outputFile.name.endsWith('.aar')) {
//            def fileName = "permissions-manager-${version}.aar"
//            output.outputFile = new File(outputFile.parent, fileName)
//        }
//    }
//}

//android.libraryVariants.all { variant ->
//    task("generate${variant.name}Javadoc", type: Javadoc) {
//        description "Generates Javadoc for $variant.name."
//        source = variant.javaCompile.source
//        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
//        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
//        options.links("http://docs.oracle.com/javase/7/docs/api/");
//        options.links("http://d.android.com/reference/");
//        exclude '**/BuildConfig.java'
//        exclude '**/R.java'
//    }
//}

//install {
//    repositories.mavenInstaller {
//        pom.project {
//            name 'Android Permissions Manager'
//            description 'Easily manage Android Marshmallow and up runtime permissions. This library is backwards compatible. In pre-Marshmallow devices permissions are returned as given.'
//            url 'https://github.com/ralphpina/Android-Permissions-Manager'
//            inceptionYear '2015'
//
//            packaging 'aar'
//            groupId 'net.ralphpina.permissionsmanager'
//            artifactId 'permissions-manager'
//            version '1.0.0'
//
//            licenses {
//                license {
//                    name 'The Apache Software License, Version 2.0'
//                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    distribution 'repo'
//                }
//            }
//            scm {
//                connection 'https://github.com/ralphpina/Android-Permissions-Manager.git'
//                url 'https://github.com/ralphpina/Android-Permissions-Manager'
//
//            }
//            developers {
//                developer {
//                    name 'Ralph Pina'
//                }
//            }
//        }
//    }
//}

//bintray {
//    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
//    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
//    configurations = ['archives']
//    pkg {
//        repo = 'maven'
//        name = 'permissions-manager'
//        userOrg = user
//        licenses = ['Apache-2.0']
//        vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'
//        version {
//            name = '1.0.0'
//            desc = 'Easily manage Android Marshmallow and up runtime permissions. This library is backwards compatible. In pre-Marshmallow devices permissions are returned as given.'
//            vcsTag = '1.0.0'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
//        }
//    }
//}
